#include <stdio.h>
#include <string.h>
#include <string.h>
#include "socket.h"
#include<sys/socket.h>
#include<netinet/in.h>
#include<netinet/ip.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>


#define BUFF_SIZE 1000


void initialiser_signaux(void)
{
  if(signal(SIGPIPE,SIG_IGN) == SIG_ERR)
   {
     perror("signal");
   }
}


int main ()
{
 initialiser_signaux();
 int serveur=creer_serveur(8000);

if(serveur == -1){
  perror("creer serveur"); 
  return -1;
}

 while(1){
 int socket_client ;
 int f;
 socket_client=accept(serveur, NULL , NULL);
 f = fork();
if(f==0)
{
const char * message_bienvenue ="Bonjour ,Marhaba , Onaya \n Bienvenu sur le serveur web de C\n Ici nous avons Ã  implementer un long message\n au moins dix lignes !!!\n vous rendez vous compte\n c'est quasiment impossible\n enfin sauf si on abuse\n des backslash n\n encore un petit dernier pr la route\nsdfsfsfjsdkjfskdjfksjfksjdfjs\nsdjhfgskjgfshdgfsdfhsfh\njsdkhfkjsdhfjksdhfjsdhfjsdhfjsdhfjhsjehehfjsehf\nshfsoieuijfsdjfosdujfioseufoijf\n" ;
 sleep(1);
 write(socket_client,message_bienvenue,strlen(message_bienvenue));
int taille;
int buffer[BUFF_SIZE];
 while ((taille = read(socket_client, buffer, BUFF_SIZE))>0)
 {
	write(socket_client, buffer, taille);
 }
	printf("fils");
}
else if(f > 0)
{
close(socket_client);
}
else if(f<0)
{
perror("erreur fork negatif");
}
 if ( socket_client == -1)
 {
 perror ("accept");
 return -1;
 }
 
 
return 0;
}

